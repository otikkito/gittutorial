diff -Naur procps-3.2.8.orig/proc/sysinfo.c procps-3.2.8/proc/sysinfo.c
--- procps-3.2.8.orig/proc/sysinfo.c	2015-03-03 15:13:40.000000000 +0100
+++ procps-3.2.8/proc/sysinfo.c	2015-03-03 15:34:53.724000337 +0100
@@ -24,6 +24,9 @@
 #include <netinet/in.h>  /* htons */
 #endif
 
+#include <link.h>
+#include <elf.h>
+
 long smp_num_cpus;     /* number of CPUs */
 
 #define BAD_OPEN_MESSAGE					\
@@ -189,17 +192,52 @@
 
 //extern char** environ;
 
-/* for ELF executables, notes are pushed before environment and args */
-static unsigned long find_elf_note(unsigned long findme){
-  unsigned long *ep = (unsigned long *)environ;
-  while(*ep++);
-  while(*ep){
-    if(ep[0]==findme) return ep[1];
-    ep+=2;
+static unsigned long find_elf_note(unsigned long type)
+{
+  ElfW(auxv_t) auxv_struct;
+  ElfW(auxv_t) *auxv_temp;
+  FILE *fd;
+  int i;
+  static ElfW(auxv_t) *auxv = NULL;
+
+  if(!auxv) {
+
+    fd = fopen("/proc/self/auxv", "rb");
+    if(!fd) {
+      perror("/proc/self/auxv");
+      exit(EXIT_FAILURE);
+    }
+
+    auxv = (ElfW(auxv_t) *) malloc(getpagesize());
+    if (!auxv) {
+      perror("malloc");
+      exit(EXIT_FAILURE);
+    }
+
+    i = 0;
+    do {
+      fread(&auxv_struct, sizeof(ElfW(auxv_t)), 1, fd);
+      auxv[i] = auxv_struct;
+      i++;
+    } while (auxv_struct.a_type != AT_NULL);
+
+    fclose(fd);
+
   }
+
+  auxv_temp = auxv;
+  i = 0;
+  do {
+    if(auxv_temp[i].a_type == type) {
+      return (unsigned long)auxv_temp[i].a_un.a_val;
+    }
+    i++;
+  } while (auxv_temp[i].a_type != AT_NULL);
+
   return NOTE_NOT_FOUND;
 }
 
+
 int have_privs;
 
 static int check_for_privs(void){
