diff --git a/proc/readproc.c b/proc/readproc.c
index 4fad11d..2f2c19c 100644
--- a/proc/readproc.c
+++ b/proc/readproc.c
@@ -141,7 +141,8 @@ static void status2proc(char *S, proc_t *restrict P, int is_proc){
       F(Tgid)
       NUL NUL NUL NUL
       F(SigBlk)
-      NUL NUL NUL
+      F(VmSwap)
+      NUL NUL
     };
 
 #undef F
@@ -156,6 +157,7 @@ ENTER(0x220);
     P->vm_stack= 0;
     P->vm_exe  = 0;
     P->vm_lib  = 0;
+    P->vm_swap = 0;
     P->nlwp    = 0;
     P->signal[0] = '\0';  // so we can detect it as missing for very old kernels
 
@@ -292,6 +294,9 @@ ENTER(0x220);
     case_VmStk:
         P->vm_stack = strtol(S,&S,10);
         continue;
+    case_VmSwap:
+	P->vm_swap = strtol(S,&S,10);
+	continue;
     }
 
 #if 0
diff --git a/proc/readproc.h b/proc/readproc.h
index a953b29..eb65d1d 100644
--- a/proc/readproc.h
+++ b/proc/readproc.h
@@ -100,6 +100,7 @@ typedef struct proc_t {
 	vm_stack,       // status          stack size
 	vm_exe,         // status          executable size
 	vm_lib,         // status          library size (all pages, not just used ones)
+	vm_swap,	// status          swap size
 	rtprio,		// stat            real-time priority
 	sched,		// stat            scheduling class
 	vsize,		// stat            number of pages of virtual memory ...
diff --git a/top.c b/top.c
index 6d4a7cc..93db9f0 100644
--- a/top.c
+++ b/top.c
@@ -215,7 +215,7 @@ static int sort_P_TME (const proc_t **P, const proc_t **Q)
 }
 
 SCB_NUM1(P_VRT, size)
-SCB_NUM2(P_SWP, size, resident)
+SCB_NUM1(P_SWP, vm_swap)
 SCB_NUM1(P_RES, resident)               // also serves P_MEM !
 SCB_NUM1(P_COD, trs)
 SCB_NUM1(P_DAT, drs)
@@ -1243,7 +1243,7 @@ static FLD_t Fieldstab[] = {
    { "MmRr", "    TIME+ ",  " %9.9s",    9,    -1, SF(TME), "CPU Time, hundredths", L_stat   },
    { "NnFf", " %MEM",       " %#4.1f",  -1,    -1, SF(RES), "Memory usage (RES)",   L_statm  },
    { "OoMm", "  VIRT",      " %5.5s",    5, SK_Kb, SF(VRT), "Virtual Image (kb)",   L_statm  },
-   { "PpOo", " SWAP",       " %4.4s",    4, SK_Kb, SF(SWP), "Swapped size (kb)",    L_statm  },
+   { "PpOo", " SWAP",       " %4.4s",    4, SK_Kb, SF(SWP), "Swapped size (kb)",    L_status },
    { "QqTt", "  RES",       " %4.4s",    4, SK_Kb, SF(RES), "Resident size (kb)",   L_statm  },
    { "RrKk", " CODE",       " %4.4s",    4, SK_Kb, SF(COD), "Code size (kb)",       L_statm  },
    { "SsLl", " DATA",       " %4.4s",    4, SK_Kb, SF(DAT), "Data+Stack size (kb)", L_statm  },
@@ -3134,7 +3134,7 @@ static void task_show (const WIN_t *q, const proc_t *p)
             MKCOL(p->state);
             break;
          case P_SWP:
-            MKCOL(scale_num(PAGES_TO_KB(p->size - p->resident), w, s));
+            MKCOL(scale_num(p->vm_swap, w, s));
             break;
          case P_TME:
          case P_TM2:
diff -up ./procps-3.2.8/top.1.man ./procps-3.2.8/top.1
--- procps-3.2.8/top.1.man	2011-06-02 13:39:13.000000000 +0200
+++ procps-3.2.8/top.1	2011-06-02 13:39:42.546926439 +0200
@@ -408,11 +408,9 @@ It includes all code, data and shared li
 swapped out. (Note: you can define the STATSIZE=1 environment variable and the VIRT
 will be calculated from the /proc/#/state VmSize field.)
 
-VIRT = SWAP + RES.
-
 .TP 3
 p:\fB SWAP\fR \*(EM Swapped size (kb)
-The swapped out portion of a task's total \*(MV image.
+Per-process swap values are now taken from /proc/#/status VmSwap field.
 
 .TP 3
 q:\fB RES\fR \*(EM Resident size (kb)
