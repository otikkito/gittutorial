Git documentation: http://www.kernel.org/pub/software/scm/git/docs
www.kjoseph-it.com
Soruce: "Version control with Git" by Jon Loeliger & Matthew McCullough

#intilializing a repo
$git init 

#configuring the username and email
$git config --global user.name "Kito Joseph"
$git config --global user.email "kitojoseph@gmail.com"


#add a file to the repository which stages a file "an interim step before commital"
git add <filename>

#check the status of files
$git status

#ignoring files
$cat .gitignore

#to see what has been changed but has not been staged
$git diff

#removing file from the repo
$git rm <filename>

#moving files
git mv <filename> <filename> <filename>

#view log of everything that has happen
$git log

#To see more details about a particular commit
git show <commit number> 

#to tag specific points
#listing your tags
$git tag

#creating an annotated tag
$git tag -a v1.0 -m ' my version 1.0'

#create a branch
$git branch <branch name>

#To change branches
$git checkout <branch name>

#to push a branch to github
$git push origin <branch_name>

#To merge branch into master
$git merge <branch name>

#To find line blame
$git blame
 
#git cherry pick 

#remove last commit: https://www.git-tower.com/learn/git/faq/undo-last-commit
#https://gist.github.com/gunjanpatel/18f9e4d1eb609597c50c2118e416e6a6
//still showing the banch is behind origin/master
git reset --soft HEAD~1   //use this to save the previous changes
or
git reset --hard HEAD~1   //use this to not save the previous changes
git push origin -f 
---------------------

To view diff with meld: https://stackoverflow.com/questions/2006032/view-differences-of-branches-with-meld
$git config --global diff.tool meld
$git difftool master..<branch_name>

"Basic git concepts"
- "A git repository is simply a database containing all the information needed 
to retain and manage the revision and history of a project"
- "Within a repository, Git maintains two primary data structures, the object 
store and the index"

---------------------
git                           git-merge-file
git-add                       git-merge-index
git-am                        git-merge-one-file
git-annotate                  git-mergetool
git-apply                     git-mergetool--lib
git-archive                   git-merge-tree
gitattributes                 git-mktag
git-bisect                    git-mktree
git-blame                     gitmodules
git-branch                    git-multi-pack-index
git-bugreport                 git-mv
git-bundle                    git-name-rev
git-cat-file                  gitnamespaces
git-check-attr                git-notes
git-check-ignore              git-pack-objects
git-check-mailmap             git-pack-redundant
git-checkout                  git-pack-refs
git-checkout-index            git-patch-id
git-check-ref-format          git-prune
git-cherry                    git-prune-packed
git-cherry-pick               git-pull
git-clean                     git-push
gitcli                        git-quiltimport
git-clone                     git-range-diff

---------------------
